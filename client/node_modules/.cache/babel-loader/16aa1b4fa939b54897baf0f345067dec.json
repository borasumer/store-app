{"ast":null,"code":"import _slicedToArray from \"/Users/Bora/Desktop/store-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\nimport axios from 'axios';\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = props => {\n  const _useState = useState(storeProducts),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  const _useState3 = useState(detailProduct),\n        _useState4 = _slicedToArray(_useState3, 2),\n        details = _useState4[0],\n        setDetails = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cart = _useState6[0],\n        setCart = _useState6[1];\n\n  const _useState7 = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cartValue = _useState8[0],\n        setCartValue = _useState8[1]; //console.log('First', storeProducts);\n\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/products/add/', storeProducts).then(console.log('products are added to the database')).catch(err => console.log(err));\n    axios.get('http://localhost:5000/products/').then(response => {\n      response ? console.log(response.data) : console.log('there is no response');\n    });\n  }, []);\n  useEffect(() => {\n    const addTotals = () => {\n      //console.log(cart);\n      let subTotal = 0;\n      cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      setCartValue({\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      });\n    };\n\n    addTotals();\n  }, [details.total, cart]); //console.log(details.tax)\n  // useEffect(() => {\n  //   setStore();\n  // }, [])\n\n  const _useState9 = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        model = _useState10[0],\n        setModel = _useState10[1]; // const setStore = () => {\n  //   let tempProducts = [];\n  //   storeProducts.forEach(item => {\n  //     const singleItem = { ...item };\n  //     tempProducts = [...tempProducts, singleItem];\n  //   });\n  //   setProducts(tempProducts);\n  //   console.log('set')\n  // }\n  //! Add Totals\n\n\n  const addTotals = () => {\n    //console.log(cart);\n    let subTotal = 0;\n    cart.map(item => subTotal += item.total);\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }; //! Increment Func for the Cart\n\n\n  const increment = id => {\n    let tempCart = [...cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n    setCart(tempCart);\n  }; //! Decrement Func for the Cart\n\n\n  const decrement = id => {\n    let tempCart = [...cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n\n    if (product.count === 0) {\n      removeItem(id);\n    } else {\n      product.total = product.count * product.price;\n      setCart(tempCart);\n    }\n  }; //! Remove item from the cart\n\n\n  const removeItem = id => {\n    let tempProducts = [...products];\n    let tempCart = [...cart];\n    tempCart = tempCart.filter(item => item.id !== id);\n    const index = tempProducts.indexOf(getItem(id));\n    let removedProduct = tempProducts[index]; //console.log(removedProduct);\n\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setCart([...tempCart]);\n    setProducts([...tempProducts]);\n  }; //! Clear cart\n\n\n  const clearCart = () => {\n    setCart([]);\n    setCartValue({\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    });\n  }; //! openModel Func\n\n\n  const openModel = id => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }; //! closeModel Func\n\n\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    });\n  }; //! addCart Func\n\n\n  const addCart = id => {\n    console.log('first', storeProducts);\n    let tempProducts = [...storeProducts];\n    const index = tempProducts.indexOf(getItem(id));\n    const tempPro = tempProducts[index];\n    tempPro.inCart = true;\n    tempPro.count = 1;\n    const price = tempPro.price;\n    tempPro.total = price; //setProducts(tempProducts);\n\n    setCart([...cart, tempPro]);\n  };\n\n  const resStore = () => {\n    let tempProducts = [...storeProducts];\n    tempProducts.forEach(item => item.inCart = false); //setProducts(tempProducts);\n\n    setProducts(tempProducts); //console.log('Second', tempProducts);\n  }; //! getItem Func - called in the handleDetails Func\n\n\n  const getItem = id => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }; //! handleDetails Func\n\n\n  const handleDetails = id => {\n    const product = getItem(id);\n    setDetails(product); //console.log(product);\n  }; //console.log('hi')\n\n\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      resStore,\n      products,\n      cart,\n      details,\n      addCart,\n      handleDetails,\n      model,\n      openModel,\n      closeModel,\n      increment,\n      decrement,\n      removeItem,\n      clearCart,\n      cartValue,\n      addTotals\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProductContextProvider;","map":{"version":3,"sources":["/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx"],"names":["React","createContext","useState","useEffect","storeProducts","detailProduct","axios","ProductContext","ProductContextProvider","props","products","setProducts","details","setDetails","cart","setCart","cartSubTotal","cartTax","cartTotal","cartValue","setCartValue","post","then","console","log","catch","err","get","response","data","addTotals","subTotal","map","item","total","tempTax","tax","parseFloat","toFixed","modelProduct","modelOpen","model","setModel","increment","id","tempCart","selectedProduct","find","index","indexOf","product","count","price","decrement","removeItem","tempProducts","filter","getItem","removedProduct","inCart","clearCart","openModel","closeModel","addCart","tempPro","resStore","forEach","handleDetails","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,SAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,cAAc,GAAGN,aAAa,EAApC;;AAEP,MAAMO,sBAAsB,GAAIC,KAAD,IAAW;AAAA,oBACRP,QAAQ,CAACE,aAAD,CADA;AAAA;AAAA,QACjCM,QADiC;AAAA,QACvBC,WADuB;;AAAA,qBAEVT,QAAQ,CAACG,aAAD,CAFE;AAAA;AAAA,QAEjCO,OAFiC;AAAA,QAExBC,UAFwB;;AAAA,qBAGhBX,QAAQ,CAAC,EAAD,CAHQ;AAAA;AAAA,QAGjCY,IAHiC;AAAA,QAG3BC,OAH2B;;AAAA,qBAINb,QAAQ,CAAC;AACzCc,IAAAA,YAAY,EAAE,CAD2B;AAEzCC,IAAAA,OAAO,EAAE,CAFgC;AAGzCC,IAAAA,SAAS,EAAE;AAH8B,GAAD,CAJF;AAAA;AAAA,QAIjCC,SAJiC;AAAA,QAItBC,YAJsB,kBASxC;;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CAACe,IAAN,CAAW,qCAAX,EAAkDjB,aAAlD,EACGkB,IADH,CACQC,OAAO,CAACC,GAAR,CAAY,oCAAZ,CADR,EAEGC,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGApB,IAAAA,KAAK,CAACqB,GAAN,CAAU,iCAAV,EACGL,IADH,CACQM,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,GAAIL,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,IAArB,CAAJ,GAAmCN,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAA3C;AACD,KAHH;AAID,GARQ,EAQN,EARM,CAAT;AAUArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,SAAS,GAAG,MAAM;AACtB;AACA,UAAIC,QAAQ,GAAG,CAAf;AACAjB,MAAAA,IAAI,CAACkB,GAAL,CAASC,IAAI,IAAKF,QAAQ,IAAIE,IAAI,CAACC,KAAnC;AACA,YAAMC,OAAO,GAAGJ,QAAQ,GAAG,GAA3B;AACA,YAAMK,GAAG,GAAGC,UAAU,CAACF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAtB;AACA,YAAMJ,KAAK,GAAGH,QAAQ,GAAGK,GAAzB;AACAhB,MAAAA,YAAY,CAAC;AACXJ,QAAAA,YAAY,EAAEe,QADH;AAEXd,QAAAA,OAAO,EAAEmB,GAFE;AAGXlB,QAAAA,SAAS,EAAEgB;AAHA,OAAD,CAAZ;AAKD,KAZD;;AAaAJ,IAAAA,SAAS;AACV,GAfQ,EAeN,CAAClB,OAAO,CAACsB,KAAT,EAAgBpB,IAAhB,CAfM,CAAT,CArBwC,CAqCxC;AACA;AACA;AACA;;AAxCwC,qBAyCdZ,QAAQ,CAAC;AACjCqC,IAAAA,YAAY,EAAElC,aADmB;AAEjCmC,IAAAA,SAAS,EAAE;AAFsB,GAAD,CAzCM;AAAA;AAAA,QAyCjCC,KAzCiC;AAAA,QAyC1BC,QAzC0B,mBA8CxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMZ,SAAS,GAAG,MAAM;AACtB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACAjB,IAAAA,IAAI,CAACkB,GAAL,CAASC,IAAI,IAAKF,QAAQ,IAAIE,IAAI,CAACC,KAAnC;AACA,UAAMC,OAAO,GAAGJ,QAAQ,GAAG,GAA3B;AACA,UAAMK,GAAG,GAAGC,UAAU,CAACF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAtB;AACA,UAAMJ,KAAK,GAAGH,QAAQ,GAAGK,GAAzB;AACAhB,IAAAA,YAAY,CAAC;AACXJ,MAAAA,YAAY,EAAEe,QADH;AAEXd,MAAAA,OAAO,EAAEmB,GAFE;AAGXlB,MAAAA,SAAS,EAAEgB;AAHA,KAAD,CAAZ;AAKD,GAZD,CAzDwC,CAsExC;;;AACA,QAAMS,SAAS,GAAIC,EAAD,IAAQ;AACxB,QAAIC,QAAQ,GAAG,CAAC,GAAG/B,IAAJ,CAAf;AACA,UAAMgC,eAAe,GAAGD,QAAQ,CAACE,IAAT,CAAcd,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYA,EAAlC,CAAxB;AACA,UAAMI,KAAK,GAAGH,QAAQ,CAACI,OAAT,CAAiBH,eAAjB,CAAd;AACA,UAAMI,OAAO,GAAGL,QAAQ,CAACG,KAAD,CAAxB;AAEAE,IAAAA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACC,KAAR,GAAgB,CAAhC;AACAD,IAAAA,OAAO,CAAChB,KAAR,GAAgBgB,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,KAAxC;AACArC,IAAAA,OAAO,CAAC8B,QAAD,CAAP;AACD,GATD,CAvEwC,CAiFxC;;;AACA,QAAMQ,SAAS,GAAIT,EAAD,IAAQ;AACxB,QAAIC,QAAQ,GAAG,CAAC,GAAG/B,IAAJ,CAAf;AACA,UAAMgC,eAAe,GAAGD,QAAQ,CAACE,IAAT,CAAcd,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYA,EAAlC,CAAxB;AACA,UAAMI,KAAK,GAAGH,QAAQ,CAACI,OAAT,CAAiBH,eAAjB,CAAd;AACA,UAAMI,OAAO,GAAGL,QAAQ,CAACG,KAAD,CAAxB;AACAE,IAAAA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACC,KAAR,GAAgB,CAAhC;;AAEA,QAAID,OAAO,CAACC,KAAR,KAAkB,CAAtB,EAAyB;AACvBG,MAAAA,UAAU,CAACV,EAAD,CAAV;AACD,KAFD,MAEO;AACLM,MAAAA,OAAO,CAAChB,KAAR,GAAgBgB,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,KAAxC;AACArC,MAAAA,OAAO,CAAC8B,QAAD,CAAP;AACD;AAEF,GAdD,CAlFwC,CAiGxC;;;AACA,QAAMS,UAAU,GAAIV,EAAD,IAAQ;AACzB,QAAIW,YAAY,GAAG,CAAC,GAAG7C,QAAJ,CAAnB;AACA,QAAImC,QAAQ,GAAG,CAAC,GAAG/B,IAAJ,CAAf;AACA+B,IAAAA,QAAQ,GAAGA,QAAQ,CAACW,MAAT,CAAgBvB,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYA,EAApC,CAAX;AAEA,UAAMI,KAAK,GAAGO,YAAY,CAACN,OAAb,CAAqBQ,OAAO,CAACb,EAAD,CAA5B,CAAd;AACA,QAAIc,cAAc,GAAGH,YAAY,CAACP,KAAD,CAAjC,CANyB,CAOzB;;AACAU,IAAAA,cAAc,CAACC,MAAf,GAAwB,KAAxB;AACAD,IAAAA,cAAc,CAACP,KAAf,GAAuB,CAAvB;AACAO,IAAAA,cAAc,CAACxB,KAAf,GAAuB,CAAvB;AACAnB,IAAAA,OAAO,CAAC,CAAC,GAAG8B,QAAJ,CAAD,CAAP;AACAlC,IAAAA,WAAW,CAAC,CAAC,GAAG4C,YAAJ,CAAD,CAAX;AACD,GAbD,CAlGwC,CAgHxC;;;AACA,QAAMK,SAAS,GAAG,MAAM;AACtB7C,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAK,IAAAA,YAAY,CAAC;AACXJ,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAD,CAAZ;AAKD,GAPD,CAjHwC,CAyHxC;;;AACA,QAAM2C,SAAS,GAAIjB,EAAD,IAAQ;AACxB,UAAMM,OAAO,GAAGO,OAAO,CAACb,EAAD,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AACPF,MAAAA,SAAS,EAAE,IADJ;AAEPD,MAAAA,YAAY,EAAEW;AAFP,KAAD,CAAR;AAID,GAND,CA1HwC,CAiIxC;;;AACA,QAAMY,UAAU,GAAG,MAAM;AACvBpB,IAAAA,QAAQ,CAAC;AACPF,MAAAA,SAAS,EAAE,KADJ;AAEPD,MAAAA,YAAY,EAAElC;AAFP,KAAD,CAAR;AAID,GALD,CAlIwC,CAwIxC;;;AACA,QAAM0D,OAAO,GAAInB,EAAD,IAAQ;AACtBrB,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpB,aAArB;AACA,QAAImD,YAAY,GAAG,CAAC,GAAGnD,aAAJ,CAAnB;AACA,UAAM4C,KAAK,GAAGO,YAAY,CAACN,OAAb,CAAqBQ,OAAO,CAACb,EAAD,CAA5B,CAAd;AACA,UAAMoB,OAAO,GAAGT,YAAY,CAACP,KAAD,CAA5B;AACAgB,IAAAA,OAAO,CAACL,MAAR,GAAiB,IAAjB;AACAK,IAAAA,OAAO,CAACb,KAAR,GAAgB,CAAhB;AACA,UAAMC,KAAK,GAAGY,OAAO,CAACZ,KAAtB;AACAY,IAAAA,OAAO,CAAC9B,KAAR,GAAgBkB,KAAhB,CARsB,CAStB;;AACArC,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUkD,OAAV,CAAD,CAAP;AACD,GAXD;;AAYA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIV,YAAY,GAAG,CAAC,GAAGnD,aAAJ,CAAnB;AACAmD,IAAAA,YAAY,CAACW,OAAb,CAAqBjC,IAAI,IAAIA,IAAI,CAAC0B,MAAL,GAAc,KAA3C,EAFqB,CAGrB;;AACAhD,IAAAA,WAAW,CAAC4C,YAAD,CAAX,CAJqB,CAKrB;AACD,GAND,CArJwC,CA8JxC;;;AACA,QAAME,OAAO,GAAIb,EAAD,IAAQ;AACtB,UAAMM,OAAO,GAAGxC,QAAQ,CAACqC,IAAT,CAAcd,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYA,EAAlC,CAAhB;AACA,WAAOM,OAAP;AACD,GAHD,CA/JwC,CAmKxC;;;AACA,QAAMiB,aAAa,GAAIvB,EAAD,IAAQ;AAC5B,UAAMM,OAAO,GAAGO,OAAO,CAACb,EAAD,CAAvB;AACA/B,IAAAA,UAAU,CAACqC,OAAD,CAAV,CAF4B,CAG5B;AACD,GAJD,CApKwC,CA0KxC;;;AACA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEe,MAAAA,QAAF;AAAYvD,MAAAA,QAAZ;AAAsBI,MAAAA,IAAtB;AAA4BF,MAAAA,OAA5B;AAAqCmD,MAAAA,OAArC;AAA8CI,MAAAA,aAA9C;AAA6D1B,MAAAA,KAA7D;AAAoEoB,MAAAA,SAApE;AAA+EC,MAAAA,UAA/E;AAA2FnB,MAAAA,SAA3F;AAAsGU,MAAAA,SAAtG;AAAiHC,MAAAA,UAAjH;AAA6HM,MAAAA,SAA7H;AAAwIzC,MAAAA,SAAxI;AAAmJW,MAAAA;AAAnJ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAAC2D,QADT,CADF;AAKD,CAhLD;;AAkLA,eAAe5D,sBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\nimport axios from 'axios';\n\n\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n  const [products, setProducts] = useState(storeProducts);\n  const [details, setDetails] = useState(detailProduct);\n  const [cart, setCart] = useState([]);\n  const [cartValue, setCartValue] = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  });\n  //console.log('First', storeProducts);\n\n  useEffect(() => {\n    axios.post('http://localhost:5000/products/add/', storeProducts)\n      .then(console.log('products are added to the database'))\n      .catch(err => console.log(err));\n    axios.get('http://localhost:5000/products/')\n      .then(response => {\n        response ? (console.log(response.data)) : (console.log('there is no response'));\n      });\n  }, []);\n\n  useEffect(() => {\n    const addTotals = () => {\n      //console.log(cart);\n      let subTotal = 0;\n      cart.map(item => (subTotal += item.total));\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      setCartValue({\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      });\n    }\n    addTotals();\n  }, [details.total, cart]);\n  //console.log(details.tax)\n  // useEffect(() => {\n  //   setStore();\n  // }, [])\n  const [model, setModel] = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  });\n\n  // const setStore = () => {\n  //   let tempProducts = [];\n  //   storeProducts.forEach(item => {\n  //     const singleItem = { ...item };\n  //     tempProducts = [...tempProducts, singleItem];\n  //   });\n  //   setProducts(tempProducts);\n  //   console.log('set')\n  // }\n\n  //! Add Totals\n  const addTotals = () => {\n    //console.log(cart);\n    let subTotal = 0;\n    cart.map(item => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }\n  //! Increment Func for the Cart\n  const increment = (id) => {\n    let tempCart = [...cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n    setCart(tempCart);\n  }\n  //! Decrement Func for the Cart\n  const decrement = (id) => {\n    let tempCart = [...cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n\n    if (product.count === 0) {\n      removeItem(id);\n    } else {\n      product.total = product.count * product.price;\n      setCart(tempCart);\n    }\n\n  }\n  //! Remove item from the cart\n  const removeItem = (id) => {\n    let tempProducts = [...products];\n    let tempCart = [...cart];\n    tempCart = tempCart.filter(item => item.id !== id);\n\n    const index = tempProducts.indexOf(getItem(id));\n    let removedProduct = tempProducts[index];\n    //console.log(removedProduct);\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setCart([...tempCart]);\n    setProducts([...tempProducts]);\n  }\n  //! Clear cart\n  const clearCart = () => {\n    setCart([]);\n    setCartValue({\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    });\n  }\n  //! openModel Func\n  const openModel = (id) => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }\n  //! closeModel Func\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    })\n  }\n  //! addCart Func\n  const addCart = (id) => {\n    console.log('first', storeProducts)\n    let tempProducts = [...storeProducts];\n    const index = tempProducts.indexOf(getItem(id));\n    const tempPro = tempProducts[index];\n    tempPro.inCart = true;\n    tempPro.count = 1;\n    const price = tempPro.price;\n    tempPro.total = price;\n    //setProducts(tempProducts);\n    setCart([...cart, tempPro]);\n  }\n  const resStore = () => {\n    let tempProducts = [...storeProducts];\n    tempProducts.forEach(item => item.inCart = false)\n    //setProducts(tempProducts);\n    setProducts(tempProducts);\n    //console.log('Second', tempProducts);\n  }\n\n\n  //! getItem Func - called in the handleDetails Func\n  const getItem = (id) => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }\n  //! handleDetails Func\n  const handleDetails = (id) => {\n    const product = getItem(id);\n    setDetails(product);\n    //console.log(product);\n  }\n\n  //console.log('hi')\n  return (\n    <ProductContext.Provider value={{ resStore, products, cart, details, addCart, handleDetails, model, openModel, closeModel, increment, decrement, removeItem, clearCart, cartValue, addTotals }}>\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ProductContextProvider;"]},"metadata":{},"sourceType":"module"}