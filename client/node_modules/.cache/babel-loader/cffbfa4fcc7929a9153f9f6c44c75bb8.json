{"ast":null,"code":"import _slicedToArray from \"/Users/Bora/Desktop/store-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = props => {\n  const _useState = useState(storeProducts),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  const _useState3 = useState(detailProduct),\n        _useState4 = _slicedToArray(_useState3, 2),\n        details = _useState4[0],\n        setDetails = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cart = _useState6[0],\n        setCart = _useState6[1];\n\n  const _useState7 = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cartValue = _useState8[0],\n        setCartValue = _useState8[1]; //console.log('First', storeProducts);\n\n\n  useEffect(() => {\n    addTotals();\n  }, [details.total]); //console.log(details.tax)\n\n  const _useState9 = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        model = _useState10[0],\n        setModel = _useState10[1]; // const setStore = () => {\n  //   let tempProducts = [];\n  //   storeProducts.forEach(item => {\n  //     const singleItem = { ...item };\n  //     tempProducts = [...tempProducts, singleItem];\n  //   });\n  //   setProducts(tempProducts);\n  // }\n  //! Add Totals\n\n\n  const addTotals = () => {\n    //console.log(cart);\n    let subTotal = 0;\n    cart.map(item => subTotal += item.total);\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }; //! Increment Func for the Cart\n\n\n  const increment = id => {\n    console.log('this is increment method');\n  }; //! Decrement Func for the Cart\n\n\n  const decrement = id => {\n    console.log('this is decrement method');\n  }; //! Remove item from the cart\n\n\n  const removeItem = id => {\n    const tempProducts = [...products];\n    const tempCart = [...cart];\n    const newCart = tempCart.filter(item => item.id !== id);\n    const index = tempProducts.indexOf(getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setCart(...tempCart);\n  }; //! Clear cart\n\n\n  const clearCart = () => {\n    setCart([]);\n    setCartValue({\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    });\n  }; //! openModel Func\n\n\n  const openModel = id => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }; //! closeModel Func\n\n\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    });\n  }; //! addCart Func\n\n\n  const addCart = id => {\n    console.log('first', storeProducts);\n    let tempProducts = [...storeProducts];\n    const index = tempProducts.indexOf(getItem(id));\n    const tempPro = tempProducts[index];\n    tempPro.inCart = true;\n    tempPro.count = 1;\n    const price = tempPro.price;\n    tempPro.total = price; //setProducts(tempProducts);\n\n    setCart([...cart, tempPro]);\n  };\n\n  const resStore = () => {\n    let tempProducts = [...storeProducts];\n    tempProducts.forEach(item => item.inCart = false); //setProducts(tempProducts);\n\n    setProducts(tempProducts); //console.log('Second', tempProducts);\n  }; //! getItem Func - called in the handleDetails Func\n\n\n  const getItem = id => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }; //! handleDetails Func\n\n\n  const handleDetails = id => {\n    const product = getItem(id);\n    setDetails(product); //console.log(product);\n  };\n\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      resStore,\n      products,\n      cart,\n      details,\n      addCart,\n      handleDetails,\n      model,\n      openModel,\n      closeModel,\n      increment,\n      decrement,\n      removeItem,\n      clearCart,\n      cartValue,\n      addTotals\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProductContextProvider;","map":{"version":3,"sources":["/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx"],"names":["React","createContext","useState","useEffect","storeProducts","detailProduct","ProductContext","ProductContextProvider","props","products","setProducts","details","setDetails","cart","setCart","cartSubTotal","cartTax","cartTotal","cartValue","setCartValue","addTotals","total","modelProduct","modelOpen","model","setModel","subTotal","map","item","tempTax","tax","parseFloat","toFixed","increment","id","console","log","decrement","removeItem","tempProducts","tempCart","newCart","filter","index","indexOf","getItem","removedProduct","inCart","count","clearCart","openModel","product","closeModel","addCart","tempPro","price","resStore","forEach","find","handleDetails","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n  const [products, setProducts] = useState(storeProducts);\n  const [details, setDetails] = useState(detailProduct);\n  const [cart, setCart] = useState([]);\n  const [cartValue, setCartValue] = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  });\n  //console.log('First', storeProducts);\n  useEffect(() => {\n    addTotals();\n  }, [details.total]);\n  //console.log(details.tax)\n\n  const [model, setModel] = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  });\n\n  // const setStore = () => {\n  //   let tempProducts = [];\n  //   storeProducts.forEach(item => {\n  //     const singleItem = { ...item };\n  //     tempProducts = [...tempProducts, singleItem];\n  //   });\n  //   setProducts(tempProducts);\n  // }\n\n  //! Add Totals\n  const addTotals = () => {\n    //console.log(cart);\n    let subTotal = 0;\n    cart.map(item => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }\n  //! Increment Func for the Cart\n  const increment = (id) => {\n    console.log('this is increment method');\n  }\n  //! Decrement Func for the Cart\n  const decrement = (id) => {\n    console.log('this is decrement method');\n  }\n  //! Remove item from the cart\n  const removeItem = (id) => {\n    const tempProducts = [...products];\n    const tempCart = [...cart];\n    const newCart = tempCart.filter(item => item.id !== id);\n\n    const index = tempProducts.indexOf(getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n    setCart(...tempCart);\n\n  }\n  //! Clear cart\n  const clearCart = () => {\n    setCart([]);\n    setCartValue({\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    });\n  }\n  //! openModel Func\n  const openModel = (id) => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }\n  //! closeModel Func\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    })\n  }\n  //! addCart Func\n  const addCart = (id) => {\n    console.log('first', storeProducts)\n    let tempProducts = [...storeProducts];\n    const index = tempProducts.indexOf(getItem(id));\n    const tempPro = tempProducts[index];\n    tempPro.inCart = true;\n    tempPro.count = 1;\n    const price = tempPro.price;\n    tempPro.total = price;\n    //setProducts(tempProducts);\n    setCart([...cart, tempPro]);\n  }\n  const resStore = () => {\n    let tempProducts = [...storeProducts];\n    tempProducts.forEach(item => item.inCart = false)\n    //setProducts(tempProducts);\n    setProducts(tempProducts);\n    //console.log('Second', tempProducts);\n  }\n\n\n\n  //! getItem Func - called in the handleDetails Func\n  const getItem = (id) => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }\n  //! handleDetails Func\n  const handleDetails = (id) => {\n    const product = getItem(id);\n    setDetails(product);\n    //console.log(product);\n  }\n\n\n  return (\n    <ProductContext.Provider value={{ resStore, products, cart, details, addCart, handleDetails, model, openModel, closeModel, increment, decrement, removeItem, clearCart, cartValue, addTotals }}>\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ProductContextProvider;"]},"metadata":{},"sourceType":"module"}