{"ast":null,"code":"import _slicedToArray from \"/Users/Bora/Desktop/store-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts } from '../data';\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1]; // let tempProducts = [];\n  // storeProducts.map(item => {\n  //   const singleItem = { ...item };\n  //   tempProducts = [...tempProducts, singleItem];\n  // });\n  // useEffect(() => {\n  //   setProducts(tempProducts);\n  //   console.log(products);\n  // }, []);\n\n\n  const tester = () => {\n    console.log('State Products:', products[0].inCart);\n    console.log('Data Products:', storeProducts[0].inCart);\n    const tempPro = [...products];\n    tempPro[0].inCart = true;\n    setProducts(tempPro);\n    console.log('State Products:', products[0].inCart);\n    console.log('Data Products:', storeProducts[0].inCart);\n  };\n\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      products\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: tester,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Test me\"), props.children);\n};\n\nexport default ProductContextProvider;","map":{"version":3,"sources":["/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx"],"names":["React","createContext","useState","useEffect","storeProducts","ProductContext","ProductContextProvider","props","products","setProducts","tester","console","log","inCart","tempPro","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;;AAEP,MAAMK,sBAAsB,GAAIC,KAAD,IAAW;AAAA,oBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,QACjCM,QADiC;AAAA,QACvBC,WADuB,kBAGxC;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,QAAMC,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,MAA3C;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,aAAa,CAAC,CAAD,CAAb,CAAiBS,MAA/C;AAEA,UAAMC,OAAO,GAAG,CAAC,GAAGN,QAAJ,CAAhB;AACAM,IAAAA,OAAO,CAAC,CAAD,CAAP,CAAWD,MAAX,GAAoB,IAApB;AAEAJ,IAAAA,WAAW,CAACK,OAAD,CAAX;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,MAA3C;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,aAAa,CAAC,CAAD,CAAb,CAAiBS,MAA/C;AACD,GAVD;;AAWA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEL,MAAAA;AAAF,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGH,KAAK,CAACQ,QAFT,CADF;AAMD,CAhCD;;AAkCA,eAAeT,sBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts } from '../data';\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n  const [products, setProducts] = useState([]);\n\n  // let tempProducts = [];\n\n  // storeProducts.map(item => {\n  //   const singleItem = { ...item };\n  //   tempProducts = [...tempProducts, singleItem];\n  // });\n\n  // useEffect(() => {\n  //   setProducts(tempProducts);\n  //   console.log(products);\n  // }, []);\n\n  const tester = () => {\n    console.log('State Products:', products[0].inCart);\n    console.log('Data Products:', storeProducts[0].inCart);\n\n    const tempPro = [...products];\n    tempPro[0].inCart = true;\n\n    setProducts(tempPro);\n    console.log('State Products:', products[0].inCart)\n    console.log('Data Products:', storeProducts[0].inCart)\n  }\n  return (\n    <ProductContext.Provider value={{ products }}>\n      <button onClick={tester}>Test me</button>\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ProductContextProvider;"]},"metadata":{},"sourceType":"module"}