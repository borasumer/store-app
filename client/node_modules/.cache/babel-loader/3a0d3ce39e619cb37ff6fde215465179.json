{"ast":null,"code":"import _objectSpread from \"/Users/Bora/Desktop/store-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Bora/Desktop/store-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = props => {\n  const _useState = useState(storeProducts),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  const _useState3 = useState(detailProduct),\n        _useState4 = _slicedToArray(_useState3, 2),\n        details = _useState4[0],\n        setDetails = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cart = _useState6[0],\n        setCart = _useState6[1];\n\n  const _useState7 = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cartValue = _useState8[0],\n        setCartValue = _useState8[1];\n\n  useEffect(() => {\n    addTotals();\n  });\n\n  const _useState9 = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        model = _useState10[0],\n        setModel = _useState10[1];\n\n  let tempProducts = [];\n  storeProducts.forEach(item => {\n    const singleItem = _objectSpread({}, item);\n\n    tempProducts = [...tempProducts, singleItem];\n  }); //! Add Totals\n\n  const addTotals = () => {\n    console.log(cart);\n    let subTotal = 0;\n    cart.map(item => subTotal += item.total);\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }; //! Increment Func for the Cart\n\n\n  const increment = id => {\n    console.log('this is increment method');\n  }; //! Decrement Func for the Cart\n\n\n  const decrement = id => {\n    console.log('this is decrement method');\n  }; //! Remove item from the cart\n\n\n  const removeItem = id => {\n    const tempCart = [...cart];\n    const newCart = tempCart.filter(item => item.id !== id);\n    setCart([newCart]);\n    console.log('item removed');\n  }; //! Clear cart\n\n\n  const clearCart = () => {\n    console.log(' cart is cleared');\n  }; //! openModel Func\n\n\n  const openModel = id => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }; //! closeModel Func\n\n\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    });\n  }; //! addCart Func\n\n\n  const addCart = id => {\n    let tempProducts = [...products];\n    const index = tempProducts.indexOf(getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    setProducts(tempProducts);\n    setCart([...cart, product]);\n  }; //! getItem Func - called in the handleDetails Func\n\n\n  const getItem = id => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }; //! handleDetails Func\n\n\n  const handleDetails = id => {\n    const product = getItem(id);\n    setDetails(product); //console.log(product);\n  };\n\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      products,\n      cart,\n      details,\n      addCart,\n      handleDetails,\n      model,\n      openModel,\n      closeModel,\n      increment,\n      decrement,\n      removeItem,\n      clearCart,\n      cartValue,\n      addTotals\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProductContextProvider;","map":{"version":3,"sources":["/Users/Bora/Desktop/store-app/src/contexts/ProductContext.jsx"],"names":["React","createContext","useState","useEffect","storeProducts","detailProduct","ProductContext","ProductContextProvider","props","products","setProducts","details","setDetails","cart","setCart","cartSubTotal","cartTax","cartTotal","cartValue","setCartValue","addTotals","modelProduct","modelOpen","model","setModel","tempProducts","forEach","item","singleItem","console","log","subTotal","map","total","tempTax","tax","parseFloat","toFixed","increment","id","decrement","removeItem","tempCart","newCart","filter","clearCart","openModel","product","getItem","closeModel","addCart","index","indexOf","inCart","count","price","find","handleDetails","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { storeProducts, detailProduct } from '../data';\n\nexport const ProductContext = createContext();\n\nconst ProductContextProvider = (props) => {\n  const [products, setProducts] = useState(storeProducts);\n  const [details, setDetails] = useState(detailProduct);\n  const [cart, setCart] = useState([]);\n  const [cartValue, setCartValue] = useState({\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  });\n\n  useEffect(() => {\n    addTotals();\n  });\n\n  const [model, setModel] = useState({\n    modelProduct: detailProduct,\n    modelOpen: false\n  });\n\n  let tempProducts = [];\n\n  storeProducts.forEach(item => {\n    const singleItem = { ...item };\n    tempProducts = [...tempProducts, singleItem];\n  });\n  //! Add Totals\n  const addTotals = () => {\n    console.log(cart);\n    let subTotal = 0;\n    cart.map(item => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    setCartValue({\n      cartSubTotal: subTotal,\n      cartTax: tax,\n      cartTotal: total\n    });\n  }\n  //! Increment Func for the Cart\n  const increment = (id) => {\n    console.log('this is increment method');\n  }\n  //! Decrement Func for the Cart\n  const decrement = (id) => {\n    console.log('this is decrement method');\n  }\n  //! Remove item from the cart\n  const removeItem = (id) => {\n    const tempCart = [...cart];\n    const newCart = tempCart.filter(item => item.id !== id);\n    setCart([newCart]);\n    console.log('item removed')\n  }\n  //! Clear cart\n  const clearCart = () => {\n    console.log(' cart is cleared');\n  }\n  //! openModel Func\n  const openModel = (id) => {\n    const product = getItem(id);\n    setModel({\n      modelOpen: true,\n      modelProduct: product\n    });\n  }\n  //! closeModel Func\n  const closeModel = () => {\n    setModel({\n      modelOpen: false,\n      modelProduct: detailProduct\n    })\n  }\n  //! addCart Func\n  const addCart = (id) => {\n    let tempProducts = [...products];\n    const index = tempProducts.indexOf(getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    setProducts(tempProducts);\n    setCart([...cart, product]);\n  }\n\n  //! getItem Func - called in the handleDetails Func\n  const getItem = (id) => {\n    const product = products.find(item => item.id === id);\n    return product;\n  }\n  //! handleDetails Func\n  const handleDetails = (id) => {\n    const product = getItem(id);\n    setDetails(product);\n    //console.log(product);\n  }\n\n\n  return (\n    <ProductContext.Provider value={{ products, cart, details, addCart, handleDetails, model, openModel, closeModel, increment, decrement, removeItem, clearCart, cartValue, addTotals }}>\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nexport default ProductContextProvider;"]},"metadata":{},"sourceType":"module"}